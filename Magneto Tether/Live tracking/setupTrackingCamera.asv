% setupTrackingCamera.m
% 
% This function sets up a video object with a region of interest.  
% It also sets up live-image tracking and preview.
% This seems to run best if the algorithm is called
% by FramesAcquiredFcn, rather than implemented as a MATLAB video preview
% callback (called by UpdatePreviewWindowFcn).  The reason is that
% FramesAcquiredFcn is guaranteed to run on every frame.
%
% If you want to save vi
%
% JSB 10/2009
% Commented 3/2010
%
function vid = setupTrackingCamera() 

    global trackingParams;
    trackingParams = initTrackingParams();
        
    % Sets up the video object
    vid = videoinput('dcam',1,'Y8_640x480');
    set(vid,'FramesPerTrigger',inf);
    set(vid,'FrameGrabInterval', 1);
    % set(vid,'LoggingMode','disk');
    triggerconfig(vid, 'Manual');
    
    % Setup the camera
    set(vid.Source,'AutoExposureMode','manual', ...
        'BrightnessMode','manual', ...
        'AutoExposure',511, ...             % 0-511
        'Brightness', 280, ...              % 128-383
        'Gain', 160, ...                    % 0-255
        'Sharpness', 50, ...                % 0-255
        'Shutter', 7, ...                   % 0-7
        'Gamma',1, ...                      % 0 or 1  
        'FrameRate', '30');                 % 30,15,7.5,3.75 - Use a string!

    % Create the video preview figure
    size = trackingParams.boundingSize;
    center = trackingParams.boundingCenter;
    set(vid,'ROIPosition',[center(1)-size/2 center(2)-size/2 size size]);
    trackingParams.previewFigure = figure('Name', 'Live video...', ...
        'Position',[100, 100, size, size],'Resize','off','MenuBar', ...
        'none','CloseRequestFcn','haltVideo');
    warning('off','MATLAB:HandleGraphics:ObsoletedProperty:JavaFrame');
    %setAlwaysOnTop(previewFigure2,true);
        
    % Create the axes and image for the video feed and timestamp
    axes('Position',[0 0 1 1]);
    hTextLabel = uicontrol('style','text','String','Timestamp', ...
        'Units','pixels', 'Position',[size-60 1 60 12]);
    nBands = 3;
    trackingParams.hImage = image( zeros(size, size, nBands) ); 

    % Set up the update preview window function.
    setappdata(trackingParams.hImage,'UpdatePreviewWindowFcn',@magnetoPreview);
    % Set up the tracking function
    set(vid,'FramesAcquiredFcn',@magnetoTrack);
    set(vid,'FramesAcquiredFcnCount',1);    
    % Make handle to text label available to update function.
    setappdata(trackingParams.hImage,'HandleToTimestampLabel',hTextLabel);

    % Draw the graticule
    l1 = line([0 size], [size/2 size/2],'Color','w');
    l2 = line([size/2 size/2], [0 size],'Color','w');
    
    % Setup callbacks to allow ROI movement on image click
    set(trackingParams.hImage,'ButtonDownFcn','videoClickFcn');
    set(l1,'ButtonDownFcn','videoClickFcn');
    set(l2,'ButtonDownFcn','videoClickFcn');
    
    % Start the video running so tracking will continue
    start(vid);
    trigger(vid);
    

     


    




